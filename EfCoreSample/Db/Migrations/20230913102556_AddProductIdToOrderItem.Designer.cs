// <auto-generated />
using System;
using EfCoreSample.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EfCoreSample.Db.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230913102556_AddProductIdToOrderItem")]
    partial class AddProductIdToOrderItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EfCoreSample.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_at");

                    b.HasKey("Id");

                    b.ToTable("tbl_order", (string)null);
                });

            modelBuilder.Entity("EfCoreSample.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasColumnName("order_id");

                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("product_id");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("order_item_name");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("order_item_quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("tbl_order_item", (string)null);
                });

            modelBuilder.Entity("EfCoreSample.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("product_id");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("product_name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("product_price");

                    b.Property<int>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("product_quantity");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("product_updatedat");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("tbl_product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Product 01",
                            Price = 100m,
                            Quantity = 10,
                            UpdatedAt = new DateTime(2023, 9, 13, 17, 25, 56, 513, DateTimeKind.Local).AddTicks(1812)
                        },
                        new
                        {
                            Id = 2,
                            Name = "Product 02",
                            Price = 500m,
                            Quantity = 111,
                            UpdatedAt = new DateTime(2023, 9, 13, 17, 25, 56, 513, DateTimeKind.Local).AddTicks(1821)
                        },
                        new
                        {
                            Id = 3,
                            Name = "Product 03",
                            Price = 200m,
                            Quantity = 30,
                            UpdatedAt = new DateTime(2023, 9, 13, 17, 25, 56, 513, DateTimeKind.Local).AddTicks(1822)
                        });
                });

            modelBuilder.Entity("EfCoreSample.Models.OrderItem", b =>
                {
                    b.HasOne("EfCoreSample.Models.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("order_item_fk");
                });

            modelBuilder.Entity("EfCoreSample.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
